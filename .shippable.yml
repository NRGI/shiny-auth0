language: python

branches:
  only:
    - master
    - staging

env:
  global:
    # Shippable API token used to trigger deploy
    - secure: HQVobaonseebLJ9GOR5pYjnEKG8m9aWVwr5RIr9zIHwVqBbZnkUZBhXms7k7Qa9KT8jalol4rFXvwSOPse5Pl/rzCmWm4o2UJzUNRf+iTRGsj6IFkrM6uaysKH3yZOI8qZarI/qLcGtdoQA3cQ5qKWLfwCia8VwoK1Gr368DUo/hle5m5PYAmIQEFZii/iabjzzrembK0phzmHfwinR43LL4jwIOLk3AAsWhLSxLZUhtGR5hDu6pdj6YIPExPemQ+B/3tbR5NlN7Z1/2/1Jht8NN69pa5/3Dq6ryEhUI5WHtbDpqHNhQE774Xr8u6y8WjPFo7kU/63XSrweP4EDyAQ==

build:
  ci:
    # Pull latest image to be used as cache
    - docker pull nrgi/shiny-auth0:$BRANCH || echo 'Cache not available'

    # Use the `--cache-from` option to use the latest image in the repo as a cache for this build. Available since Docker 1.13
    - docker build -t nrgi/shiny-auth0:$BRANCH.$COMMIT --cache-from nrgi/shiny-auth0:$BRANCH .

    # Create the `latest` tag and force it in case the tag is already there from a previous build
    - docker tag nrgi/shiny-auth0:$BRANCH.$COMMIT nrgi/shiny-auth0:$BRANCH

    - docker push nrgi/shiny-auth0:$BRANCH
    - docker push nrgi/shiny-auth0:$BRANCH.$COMMIT

integrations:
  hub:
    - integrationName: nrgiDockerHub
      type: docker
  notifications:
    - integrationName: email
      type: email
      recipients:
        - AWSDevOps@cloudelligent.com
      branches:
        only:
          - master
          - staging
      on_success: change
      on_failure: always
